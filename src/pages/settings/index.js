import React, { useEffect } from "react";
import Layout from "@theme/Layout";
import styles from "./index.module.css";
import clsx from "clsx";
import { useState } from "react";
import { Switch } from "@headlessui/react";
import netlifyIdentity from "netlify-identity-widget";
import Link from "@docusaurus/Link";

function InfoBlock() {
  useEffect(() => {
    netlifyIdentity.setLocale("vi");
    netlifyIdentity.init({});
  }, []);

  console.log(netlifyIdentity.currentUser());
  const isLoggedIn = netlifyIdentity.currentUser() !== null;
  if (!isLoggedIn) {
    return (
      <div className="margin-bottom--xl">
        <div data-netlify-identity-button className="margin-top--md"></div>
      </div>
    );
  } else {
    return (
      <div className="margin-bottom--xl flex flex-col-reverse">
        <div data-netlify-identity-button className="margin-top--md"></div>
        <div className="avatar">
          <Link className="avatar__photo-link avatar__photo avatar__photo--lg" to="/settings">
            <img alt="Avatar" src={netlifyIdentity.currentUser()?.user_metadata?.avatar_url ?? "https://i.pravatar.cc/300"} />
          </Link>
          <div className="avatar__intro">
            <div className="avatar__name">{netlifyIdentity.currentUser()?.user_metadata?.full_name ?? "Jedi"}</div>
            <small className="avatar__subtitle">The choosen one üî∞</small>
          </div>
        </div>
      </div>
    );
  }
}

export default function Home() {
  const [enabled, setEnabled] = useState(false);

  const toggleCodePlayground = () => {
    setEnabled(!enabled);
  };

  useEffect(() => {
    const isCodePlaygroundEnabled = localStorage.getItem("isCodePlaygroundEnabled") === "true";
    setEnabled(isCodePlaygroundEnabled);
  }, []);

  useEffect(() => {
    localStorage.setItem("isCodePlaygroundEnabled", enabled);
  }, [enabled]);

  return (
    <Layout title={`C√†i ƒë·∫∑t`} description="C√†i ƒë·∫∑t">
      <div className={styles.settingsContainer}>
        <h1>Th√¥ng tin c√° nh√¢n</h1>
        <InfoBlock />
        <h1>C√†i ƒë·∫∑t</h1>
        <hr />
        <div className={styles.settingBlock}>
          <div className={styles.settingBlockHead}>
            <div className={styles.settingBlockTitle}>Code Playground</div>
            <span className={styles.settingBlockDes}>
              Trong c√°c trang t√†i li·ªáu, ta c√≥ th·ªÉ s·ª≠ d·ª•ng c√°c code playground ƒë·ªÉ th·ª±c thi v√† ki·ªÉm tra nhanh k·∫øt qu·∫£ c·ªßa code minh h·ªça, qua ƒë√≥ hi·ªÉu r√µ
              h∆°n v·ªÅ c√°ch s·ª≠ d·ª•ng c√°c h√†m, ph∆∞∆°ng th·ª©c, c√∫ ph√°p, ...
            </span>
          </div>
          <div className={styles.settingBlockBody}>
            <div className={styles.settingItem}>
              <Switch
                checked={enabled}
                onChange={toggleCodePlayground}
                className={clsx(styles.switch, enabled ? styles.switchEnabled : styles.switchDisabled)}
              >
                <span className="sr-only">Code playground</span>
                <span className={clsx(styles.switchDot, enabled ? styles.dotEnabled : styles.dotDisabled)} />
              </Switch>
              <div className={styles.settingItemDesc}>
                <span className={styles.settingItemTitle}>Code playground</span>
                <p>
                  <span className="badge badge--warning margin-right--sm">Beta</span>
                  Code playground
                </p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </Layout>
  );
}
